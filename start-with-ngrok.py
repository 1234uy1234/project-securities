#!/usr/bin/env python3
"""
Script để khởi động backend với ngrok tự động
Tự động tạo public HTTPS URL và cập nhật file .env
"""

import subprocess
import time
import json
import os
import sys
import threading
from pathlib import Path

def get_ngrok_url():
    """Lấy ngrok URL từ API"""
    try:
        import requests
        response = requests.get('http://localhost:4040/api/tunnels')
        data = response.json()
        
        for tunnel in data.get('tunnels', []):
            if tunnel.get('proto') == 'https':
                return tunnel.get('public_url')
    except Exception as e:
        print(f"❌ Lỗi lấy ngrok URL: {e}")
    return None

def update_env_file(ngrok_url):
    """Cập nhật file .env với ngrok URL"""
    env_file = Path('.env')
    
    # Đọc file .env hiện tại
    env_vars = {}
    if env_file.exists():
        with open(env_file, 'r') as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith('#') and '=' in line:
                    key, value = line.split('=', 1)
                    env_vars[key] = value
    
    # Cập nhật NGROK_URL
    env_vars['NGROK_URL'] = ngrok_url
    env_vars['VITE_API_URL'] = ngrok_url
    
    # Ghi lại file .env
    with open(env_file, 'w') as f:
        f.write("# Auto-generated by start-with-ngrok.py\n")
        f.write(f"NGROK_URL={ngrok_url}\n")
        f.write(f"VITE_API_URL={ngrok_url}\n")
        f.write("\n# Other environment variables\n")
        for key, value in env_vars.items():
            if key not in ['NGROK_URL', 'VITE_API_URL']:
                f.write(f"{key}={value}\n")
    
    print(f"✅ Đã cập nhật file .env với NGROK_URL={ngrok_url}")

def start_ngrok(port=8000):
    """Khởi động ngrok"""
    print(f"🚀 Đang khởi động ngrok cho port {port}...")
    
    # Khởi động ngrok
    ngrok_process = subprocess.Popen([
        'ngrok', 'http', str(port),
        '--log=stdout'
    ], stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
    
    # Đợi ngrok khởi động
    time.sleep(3)
    
    # Lấy URL từ ngrok
    max_retries = 10
    for i in range(max_retries):
        ngrok_url = get_ngrok_url()
        if ngrok_url:
            print(f"✅ Ngrok đã khởi động thành công!")
            print(f"🌐 Public URL: {ngrok_url}")
            print(f"🔗 Backend URL: {ngrok_url}")
            print(f"📱 Frontend sẽ sử dụng: {ngrok_url}")
            
            # Cập nhật file .env
            update_env_file(ngrok_url)
            
            return ngrok_process, ngrok_url
        
        print(f"⏳ Đang đợi ngrok khởi động... ({i+1}/{max_retries})")
        time.sleep(2)
    
    print("❌ Không thể lấy ngrok URL sau 20 giây")
    return None, None

def start_backend():
    """Khởi động backend"""
    print("🐍 Đang khởi động backend...")
    
    # Kiểm tra xem có file main.py hay app.py
    backend_files = ['backend/app/main.py', 'backend/main.py', 'app.py', 'main.py']
    backend_file = None
    
    for file in backend_files:
        if os.path.exists(file):
            backend_file = file
            break
    
    if not backend_file:
        print("❌ Không tìm thấy file backend!")
        return None
    
    print(f"📁 Sử dụng file backend: {backend_file}")
    
    # Khởi động backend
    if backend_file.endswith('.py'):
        backend_process = subprocess.Popen([
            sys.executable, backend_file
        ], cwd=os.path.dirname(backend_file) if os.path.dirname(backend_file) else '.')
    else:
        backend_process = subprocess.Popen([backend_file])
    
    return backend_process

def main():
    """Hàm chính"""
    print("🎯 Khởi động hệ thống với ngrok...")
    print("=" * 50)
    
    # Khởi động backend trước
    backend_process = start_backend()
    if not backend_process:
        return
    
    # Đợi backend khởi động
    print("⏳ Đợi backend khởi động...")
    time.sleep(5)
    
    # Khởi động ngrok
    ngrok_process, ngrok_url = start_ngrok(8000)
    if not ngrok_process:
        print("❌ Không thể khởi động ngrok")
        backend_process.terminate()
        return
    
    print("\n" + "=" * 50)
    print("🎉 Hệ thống đã khởi động thành công!")
    print(f"🌐 Public URL: {ngrok_url}")
    print("📱 Bây giờ bạn có thể truy cập từ bất kỳ đâu!")
    print("\n💡 Để dừng hệ thống, nhấn Ctrl+C")
    print("=" * 50)
    
    try:
        # Giữ script chạy
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        print("\n🛑 Đang dừng hệ thống...")
        backend_process.terminate()
        ngrok_process.terminate()
        print("✅ Đã dừng hệ thống")

if __name__ == "__main__":
    main()

