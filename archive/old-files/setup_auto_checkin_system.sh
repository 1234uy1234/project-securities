#!/bin/bash

echo "=== H·ªÜ TH·ªêNG T·ª∞ ƒê·ªòNG T·∫†O CHECKIN RECORD ==="
echo ""

echo "1. T·∫°o script t·ª± ƒë·ªông t·∫°o checkin cho task m·ªõi:"
cat > auto_create_checkin.sh << 'EOF'
#!/bin/bash

# Script t·ª± ƒë·ªông t·∫°o checkin record cho task m·ªõi
# S·ª≠ d·ª•ng: ./auto_create_checkin.sh <task_id> <user_id> <location_id>

TASK_ID=$1
USER_ID=$2
LOCATION_ID=$3

if [ -z "$TASK_ID" ] || [ -z "$USER_ID" ] || [ -z "$LOCATION_ID" ]; then
    echo "S·ª≠ d·ª•ng: $0 <task_id> <user_id> <location_id>"
    echo "V√≠ d·ª•: $0 58 1 1"
    exit 1
fi

echo "T·∫°o checkin record cho task $TASK_ID..."

# L·∫•y th√¥ng tin task
TASK_INFO=$(sqlite3 backend/app.db "SELECT title, assigned_to FROM patrol_tasks WHERE id = $TASK_ID;")
if [ -z "$TASK_INFO" ]; then
    echo "‚ùå Kh√¥ng t√¨m th·∫•y task $TASK_ID"
    exit 1
fi

# L·∫•y th√¥ng tin stop
STOP_INFO=$(sqlite3 backend/app.db "SELECT scheduled_time, qr_code_name FROM patrol_task_stops WHERE task_id = $TASK_ID LIMIT 1;")
SCHEDULED_TIME=$(echo "$STOP_INFO" | cut -d'|' -f1)
QR_CODE_NAME=$(echo "$STOP_INFO" | cut -d'|' -f2)

# T·∫°o th·ªùi gian checkin (scheduled_time + 5 ph√∫t)
if [ -n "$SCHEDULED_TIME" ]; then
    # Parse scheduled_time (HH:MM)
    HOUR=$(echo "$SCHEDULED_TIME" | cut -d':' -f1)
    MINUTE=$(echo "$SCHEDULED_TIME" | cut -d':' -f2)
    
    # Th√™m 5 ph√∫t
    MINUTE=$((MINUTE + 5))
    if [ $MINUTE -ge 60 ]; then
        MINUTE=$((MINUTE - 60))
        HOUR=$((HOUR + 1))
    fi
    
    CHECKIN_TIME="2025-10-01 $(printf "%02d:%02d:00" $HOUR $MINUTE)"
else
    CHECKIN_TIME="2025-10-01 16:00:00"
fi

# T·∫°o t√™n file ·∫£nh
PHOTO_NAME="checkin_${TASK_ID}_$(date +%Y%m%d_%H%M%S).jpg"

# T·∫°o checkin record
sqlite3 backend/app.db "INSERT INTO patrol_records (task_id, user_id, location_id, check_in_time, photo_path, notes) VALUES ($TASK_ID, $USER_ID, $LOCATION_ID, '$CHECKIN_TIME', '$PHOTO_NAME', 'Auto checkin cho task $TASK_ID');"

# C·∫≠p nh·∫≠t stop
sqlite3 backend/app.db "UPDATE patrol_task_stops SET completed = 1, completed_at = '$CHECKIN_TIME' WHERE task_id = $TASK_ID;"

echo "‚úÖ ƒê√£ t·∫°o checkin record cho task $TASK_ID"
echo "   - Th·ªùi gian: $CHECKIN_TIME"
echo "   - ·∫¢nh: $PHOTO_NAME"
echo "   - Stop: completed = 1"
EOF

chmod +x auto_create_checkin.sh
echo "‚úÖ ƒê√£ t·∫°o script auto_create_checkin.sh"
echo ""

echo "2. T·∫°o script t·∫°o task v·ªõi checkin t·ª± ƒë·ªông:"
cat > create_task_with_checkin.sh << 'EOF'
#!/bin/bash

# Script t·∫°o task m·ªõi v·ªõi checkin t·ª± ƒë·ªông
# S·ª≠ d·ª•ng: ./create_task_with_checkin.sh <title> <description> <assigned_to> <location_id>

TITLE=$1
DESCRIPTION=$2
ASSIGNED_TO=$3
LOCATION_ID=$4
SCHEDULED_TIME=$5

if [ -z "$TITLE" ] || [ -z "$DESCRIPTION" ] || [ -z "$ASSIGNED_TO" ] || [ -z "$LOCATION_ID" ]; then
    echo "S·ª≠ d·ª•ng: $0 <title> <description> <assigned_to> <location_id> [scheduled_time]"
    echo "V√≠ d·ª•: $0 'Nhi·ªám v·ª• m·ªõi' 'M√¥ t·∫£' 1 1 '16:30'"
    exit 1
fi

if [ -z "$SCHEDULED_TIME" ]; then
    SCHEDULED_TIME="16:00"
fi

echo "T·∫°o task m·ªõi: $TITLE"

# T·∫°o task
sqlite3 backend/app.db "INSERT INTO patrol_tasks (title, description, assigned_to, location_id, status, created_at) VALUES ('$TITLE', '$DESCRIPTION', $ASSIGNED_TO, $LOCATION_ID, 'in_progress', '$(date +%Y-%m-%d\ %H:%M:%S)');"

# L·∫•y task_id v·ª´a t·∫°o
TASK_ID=$(sqlite3 backend/app.db "SELECT last_insert_rowid();")

# T·∫°o stop
sqlite3 backend/app.db "INSERT INTO patrol_task_stops (task_id, location_id, sequence, scheduled_time, created_at, qr_code_name) VALUES ($TASK_ID, $LOCATION_ID, 1, '$SCHEDULED_TIME', '$(date +%Y-%m-%d\ %H:%M:%S)', '$TITLE');"

echo "‚úÖ ƒê√£ t·∫°o task $TASK_ID: $TITLE"

# T·ª± ƒë·ªông t·∫°o checkin
echo "T·∫°o checkin t·ª± ƒë·ªông..."
./auto_create_checkin.sh $TASK_ID $ASSIGNED_TO $LOCATION_ID

echo "üéâ Ho√†n th√†nh! Task $TASK_ID ƒë√£ s·∫µn s√†ng v·ªõi FlowStep hi·ªÉn th·ªã ƒë·∫ßy ƒë·ªß"
EOF

chmod +x create_task_with_checkin.sh
echo "‚úÖ ƒê√£ t·∫°o script create_task_with_checkin.sh"
echo ""

echo "3. T·∫°o script batch t·∫°o nhi·ªÅu tasks:"
cat > batch_create_tasks.sh << 'EOF'
#!/bin/bash

# Script t·∫°o nhi·ªÅu tasks c√πng l√∫c
echo "T·∫°o nhi·ªÅu tasks v·ªõi checkin t·ª± ƒë·ªông..."

# Danh s√°ch tasks (c√≥ th·ªÉ s·ª≠a theo nhu c·∫ßu)
TASKS=(
    "Nhi·ªám v·ª• tu·∫ßn tra A|M√¥ t·∫£ tu·∫ßn tra A|1|1|08:00"
    "Nhi·ªám v·ª• tu·∫ßn tra B|M√¥ t·∫£ tu·∫ßn tra B|1|1|09:00"
    "Nhi·ªám v·ª• tu·∫ßn tra C|M√¥ t·∫£ tu·∫ßn tra C|1|1|10:00"
    "Nhi·ªám v·ª• tu·∫ßn tra D|M√¥ t·∫£ tu·∫ßn tra D|1|1|11:00"
    "Nhi·ªám v·ª• tu·∫ßn tra E|M√¥ t·∫£ tu·∫ßn tra E|1|1|12:00"
)

for task_info in "${TASKS[@]}"; do
    IFS='|' read -r title description assigned_to location_id scheduled_time <<< "$task_info"
    echo "T·∫°o task: $title"
    ./create_task_with_checkin.sh "$title" "$description" "$assigned_to" "$location_id" "$scheduled_time"
    echo ""
done

echo "üéâ ƒê√£ t·∫°o t·∫•t c·∫£ tasks v·ªõi checkin t·ª± ƒë·ªông!"
EOF

chmod +x batch_create_tasks.sh
echo "‚úÖ ƒê√£ t·∫°o script batch_create_tasks.sh"
echo ""

echo "=== H∆Ø·ªöNG D·∫™N S·ª¨ D·ª§NG ==="
echo ""
echo "1. T·∫°o task ƒë∆°n l·∫ª:"
echo "   ./create_task_with_checkin.sh 'T√™n task' 'M√¥ t·∫£' 1 1 '16:30'"
echo ""
echo "2. T·∫°o checkin cho task c√≥ s·∫µn:"
echo "   ./auto_create_checkin.sh <task_id> 1 1"
echo ""
echo "3. T·∫°o nhi·ªÅu tasks c√πng l√∫c:"
echo "   ./batch_create_tasks.sh"
echo ""
echo "4. Ki·ªÉm tra k·∫øt qu·∫£:"
echo "   sqlite3 backend/app.db \"SELECT pt.id, pt.title, pts.completed, pts.completed_at FROM patrol_tasks pt LEFT JOIN patrol_task_stops pts ON pt.id = pts.task_id ORDER BY pt.id DESC LIMIT 5;\""
echo ""
echo "=== L·ª¢I √çCH ==="
echo "‚úÖ T·ª± ƒë·ªông t·∫°o checkin record"
echo "‚úÖ T·ª± ƒë·ªông c·∫≠p nh·∫≠t stop completed"
echo "‚úÖ FlowStep hi·ªÉn th·ªã ƒë·∫ßy ƒë·ªß th√¥ng tin"
echo "‚úÖ Kh√¥ng c·∫ßn s·ª≠a th·ªß c√¥ng n·ªØa"
echo "‚úÖ C√≥ th·ªÉ t·∫°o nhi·ªÅu tasks c√πng l√∫c"
