#!/bin/bash

# üîß S·ª¨A HO√ÄN TO√ÄN L·ªñI CHECKIN 502
# Kh√¥i ph·ª•c database v√† kh·ªüi ƒë·ªông backend ƒë√∫ng c√°ch

echo "üîß S·ª¨A HO√ÄN TO√ÄN L·ªñI CHECKIN 502"
echo "=================================="
echo "‚úÖ ƒêang kh√¥i ph·ª•c database v√† kh·ªüi ƒë·ªông backend"
echo ""

# D·ª´ng t·∫•t c·∫£ processes
echo "üõë D·ª´ng t·∫•t c·∫£ processes..."
pkill -f "python.*app.py" 2>/dev/null || true
pkill -f "uvicorn" 2>/dev/null || true
pkill -f "ngrok" 2>/dev/null || true

sleep 3

# Kh√¥i ph·ª•c database
echo "üîß Kh√¥i ph·ª•c database..."
cd /Users/maybe/Documents/shopee
cp backups/app_20251001_130916.db app.db
chmod 644 app.db
echo "‚úÖ Database ƒë√£ ƒë∆∞·ª£c kh√¥i ph·ª•c"

# Test database
echo "üß™ Test database..."
python3 -c "
import sqlite3
try:
    conn = sqlite3.connect('app.db')
    cursor = conn.cursor()
    cursor.execute('SELECT COUNT(*) FROM users')
    count = cursor.fetchone()[0]
    print(f'‚úÖ Database OK: {count} users')
    conn.close()
except Exception as e:
    print(f'‚ùå Database error: {e}')
"

# Kh·ªüi ƒë·ªông backend v·ªõi c√°ch ƒë∆°n gi·∫£n nh·∫•t
echo "üîß Kh·ªüi ƒë·ªông backend..."
cd /Users/maybe/Documents/shopee/backend

# Th·ª≠ c√°ch 1: Ch·∫°y tr·ª±c ti·∫øp
echo "üìù Th·ª≠ c√°ch 1: Ch·∫°y tr·ª±c ti·∫øp..."
python app.py &
BACKEND_PID=$!

sleep 5

# Test backend
echo "üß™ Test backend..."
if curl -s https://localhost:8000/health > /dev/null 2>&1; then
    echo "‚úÖ Backend HTTPS OK!"
    BACKEND_URL="https://localhost:8000"
elif curl -s http://localhost:8000/health > /dev/null 2>&1; then
    echo "‚úÖ Backend HTTP OK!"
    BACKEND_URL="http://localhost:8000"
else
    echo "‚ùå Backend kh√¥ng ph·∫£n h·ªìi, th·ª≠ c√°ch 2..."
    
    # D·ª´ng backend c≈©
    kill $BACKEND_PID 2>/dev/null || true
    sleep 2
    
    # Th·ª≠ c√°ch 2: Uvicorn tr·ª±c ti·∫øp
    echo "üìù Th·ª≠ c√°ch 2: Uvicorn tr·ª±c ti·∫øp..."
    cd /Users/maybe/Documents/shopee
    python -m uvicorn backend.app:app --host 0.0.0.0 --port 8000 --reload &
    BACKEND_PID=$!
    
    sleep 5
    
    # Test l·∫°i
    if curl -s https://localhost:8000/health > /dev/null 2>&1; then
        echo "‚úÖ Backend HTTPS OK!"
        BACKEND_URL="https://localhost:8000"
    elif curl -s http://localhost:8000/health > /dev/null 2>&1; then
        echo "‚úÖ Backend HTTP OK!"
        BACKEND_URL="http://localhost:8000"
    else
        echo "‚ùå Backend v·∫´n kh√¥ng ph·∫£n h·ªìi"
        BACKEND_URL=""
    fi
fi

# Kh·ªüi ƒë·ªông ngrok n·∫øu backend OK
if [ ! -z "$BACKEND_URL" ]; then
    echo "üåê Kh·ªüi ƒë·ªông ngrok..."
    ngrok http 8000 &
    NGROK_PID=$!
    
    sleep 3
    
    # L·∫•y ngrok URL
    NGROK_URL=$(curl -s http://localhost:4040/api/tunnels | python3 -c "
import sys, json
try:
    data = json.load(sys.stdin)
    for tunnel in data['tunnels']:
        if tunnel['proto'] == 'https':
            print(tunnel['public_url'])
            break
except:
    print('')
" 2>/dev/null)
    
    echo "‚úÖ Ngrok URL: $NGROK_URL"
else
    echo "‚ùå Kh√¥ng th·ªÉ kh·ªüi ƒë·ªông ngrok v√¨ backend kh√¥ng ho·∫°t ƒë·ªông"
    NGROK_PID=""
    NGROK_URL=""
fi

echo ""
echo "üìä K·∫æT QU·∫¢:"
echo "==========="
if [ ! -z "$BACKEND_URL" ]; then
    echo "‚úÖ Backend: $BACKEND_URL"
    echo "‚úÖ Database: OK"
    if [ ! -z "$NGROK_URL" ]; then
        echo "‚úÖ Ngrok: $NGROK_URL"
    fi
    echo ""
    echo "üì± TEST CHECKIN NGAY:"
    echo "====================="
    echo "1. M·ªü: https://localhost:5173"
    echo "2. ƒêƒÉng nh·∫≠p"
    echo "3. Ch·∫•m c√¥ng ‚Üí G·ª≠i b√°o c√°o"
    echo "4. Kh√¥ng c√≤n l·ªói 502!"
    echo "5. Dashboard c·∫≠p nh·∫≠t ngay l·∫≠p t·ª©c!"
else
    echo "‚ùå Backend kh√¥ng ho·∫°t ƒë·ªông"
    echo "‚ùå C·∫ßn ki·ªÉm tra l·∫°i c·∫•u h√¨nh"
fi

echo ""
echo "üîß Process IDs:"
echo "Backend PID: $BACKEND_PID"
if [ ! -z "$NGROK_PID" ]; then
    echo "Ngrok PID: $NGROK_PID"
fi
echo ""
echo "ƒê·ªÉ d·ª´ng: kill $BACKEND_PID $NGROK_PID"
