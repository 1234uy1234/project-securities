#!/bin/bash

# Script c·∫≠p nh·∫≠t IP m·ªõi cho to√†n b·ªô h·ªá th·ªëng
# S·ª≠ d·ª•ng: ./update-all-ip.sh [IP_M·ªöI]

# M√†u s·∫Øc cho output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîß SCRIPT C·∫¨P NH·∫¨T IP M·ªöI CHO TO√ÄN B·ªò H·ªÜ TH·ªêNG${NC}"
echo "=================================================="

# L·∫•y IP m·ªõi t·ª´ tham s·ªë ho·∫∑c t·ª± ƒë·ªông ph√°t hi·ªán
if [ -n "$1" ]; then
    NEW_IP="$1"
    echo -e "${YELLOW}üìç S·ª≠ d·ª•ng IP ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh: $NEW_IP${NC}"
else
    # T·ª± ƒë·ªông ph√°t hi·ªán IP
    NEW_IP=$(ifconfig | grep "inet " | grep -v 127.0.0.1 | head -1 | awk '{print $2}')
    echo -e "${YELLOW}üìç T·ª± ƒë·ªông ph√°t hi·ªán IP: $NEW_IP${NC}"
fi

if [ -z "$NEW_IP" ]; then
    echo -e "${RED}‚ùå Kh√¥ng th·ªÉ ph√°t hi·ªán IP. Vui l√≤ng ch·ªâ ƒë·ªãnh IP th·ªß c√¥ng:${NC}"
    echo "   ./update-all-ip.sh 192.168.1.100"
    exit 1
fi

echo -e "${GREEN}‚úÖ IP m·ªõi: $NEW_IP${NC}"
echo ""

# Backup c√°c file quan tr·ªçng
echo -e "${BLUE}üíæ T·∫°o backup c√°c file c·∫•u h√¨nh...${NC}"
mkdir -p backups/$(date +%Y%m%d_%H%M%S)
BACKUP_DIR="backups/$(date +%Y%m%d_%H%M%S)"

cp frontend/src/utils/api.ts "$BACKUP_DIR/api.ts.backup" 2>/dev/null
cp nginx-https.conf "$BACKUP_DIR/nginx-https.conf.backup" 2>/dev/null
cp backend/app/config.py "$BACKUP_DIR/config.py.backup" 2>/dev/null
cp start-https-final.sh "$BACKUP_DIR/start-https-final.sh.backup" 2>/dev/null
cp IP_CONFIG_LOCKED.txt "$BACKUP_DIR/IP_CONFIG_LOCKED.txt.backup" 2>/dev/null

echo -e "${GREEN}‚úÖ ƒê√£ backup v√†o: $BACKUP_DIR${NC}"
echo ""

# 1. C·∫≠p nh·∫≠t frontend API config
echo -e "${BLUE}1Ô∏è‚É£ C·∫≠p nh·∫≠t Frontend API config...${NC}"
if [ -f "frontend/src/utils/api.ts" ]; then
    sed -i.bak "s|baseURL: 'https://[^:]*:8000/api'|baseURL: 'https://$NEW_IP:8000/api'|g" frontend/src/utils/api.ts
    echo -e "${GREEN}   ‚úÖ frontend/src/utils/api.ts${NC}"
else
    echo -e "${RED}   ‚ùå Kh√¥ng t√¨m th·∫•y frontend/src/utils/api.ts${NC}"
fi

# 2. C·∫≠p nh·∫≠t nginx config
echo -e "${BLUE}2Ô∏è‚É£ C·∫≠p nh·∫≠t Nginx config...${NC}"
if [ -f "nginx-https.conf" ]; then
    sed -i.bak "s|server [^:]*:8000;|server $NEW_IP:8000;|g" nginx-https.conf
    sed -i.bak "s|server_name [^ ]* localhost;|server_name $NEW_IP localhost;|g" nginx-https.conf
    sed -i.bak "s|proxy_pass https://[^:]*:8000/;|proxy_pass https://$NEW_IP:8000/;|g" nginx-https.conf
    sed -i.bak "s|proxy_pass https://[^:]*:8000/api/;|proxy_pass https://$NEW_IP:8000/api/;|g" nginx-https.conf
    echo -e "${GREEN}   ‚úÖ nginx-https.conf${NC}"
else
    echo -e "${RED}   ‚ùå Kh√¥ng t√¨m th·∫•y nginx-https.conf${NC}"
fi

# 3. C·∫≠p nh·∫≠t backend config
echo -e "${BLUE}3Ô∏è‚É£ C·∫≠p nh·∫≠t Backend config...${NC}"
if [ -f "backend/app/config.py" ]; then
    sed -i.bak "s|https://[^:]*:8000|https://$NEW_IP:8000|g" backend/app/config.py
    sed -i.bak "s|https://[^:]*:5173|https://$NEW_IP:5173|g" backend/app/config.py
    sed -i.bak "s|https://[^:]*:5174|https://$NEW_IP:5174|g" backend/app/config.py
    sed -i.bak "s|https://[^:]*:5175|https://$NEW_IP:5175|g" backend/app/config.py
    sed -i.bak "s|https://[^:]*\"|https://$NEW_IP\"|g" backend/app/config.py
    echo -e "${GREEN}   ‚úÖ backend/app/config.py${NC}"
else
    echo -e "${RED}   ‚ùå Kh√¥ng t√¨m th·∫•y backend/app/config.py${NC}"
fi

# 4. C·∫≠p nh·∫≠t start script
echo -e "${BLUE}4Ô∏è‚É£ C·∫≠p nh·∫≠t Start script...${NC}"
if [ -f "start-https-final.sh" ]; then
    sed -i.bak "s|CURRENT_IP=\"[^\"]*\"|CURRENT_IP=\"$NEW_IP\"|g" start-https-final.sh
    echo -e "${GREEN}   ‚úÖ start-https-final.sh${NC}"
else
    echo -e "${RED}   ‚ùå Kh√¥ng t√¨m th·∫•y start-https-final.sh${NC}"
fi

# 5. C·∫≠p nh·∫≠t QR code scripts
echo -e "${BLUE}5Ô∏è‚É£ C·∫≠p nh·∫≠t QR code scripts...${NC}"
if [ -f "create-location-qr-codes.py" ]; then
    sed -i.bak "s|base_url: str = \"https://[^:]*:8000\"|base_url: str = \"https://$NEW_IP:8000\"|g" create-location-qr-codes.py
    echo -e "${GREEN}   ‚úÖ create-location-qr-codes.py${NC}"
fi

if [ -f "backend/create_fixed_qr_codes.py" ]; then
    sed -i.bak "s|https://[^:]*:5173|https://$NEW_IP:5173|g" backend/create_fixed_qr_codes.py
    echo -e "${GREEN}   ‚úÖ backend/create_fixed_qr_codes.py${NC}"
fi

# 6. C·∫≠p nh·∫≠t IP_CONFIG_LOCKED.txt
echo -e "${BLUE}6Ô∏è‚É£ C·∫≠p nh·∫≠t IP config lock file...${NC}"
if [ -f "IP_CONFIG_LOCKED.txt" ]; then
    sed -i.bak "s|IP C·ªê ƒê·ªäNH: [^[:space:]]*|IP C·ªê ƒê·ªäNH: $NEW_IP|g" IP_CONFIG_LOCKED.txt
    sed -i.bak "s|CURRENT_IP=\"[^\"]*\"|CURRENT_IP=\"$NEW_IP\"|g" IP_CONFIG_LOCKED.txt
    sed -i.bak "s|server [^:]*:8000;|server $NEW_IP:8000;|g" IP_CONFIG_LOCKED.txt
    sed -i.bak "s|server_name [^ ]* localhost;|server_name $NEW_IP localhost;|g" IP_CONFIG_LOCKED.txt
    sed -i.bak "s|baseURL: 'https://[^:]*:8000/api'|baseURL: 'https://$NEW_IP:8000/api'|g" IP_CONFIG_LOCKED.txt
    echo -e "${GREEN}   ‚úÖ IP_CONFIG_LOCKED.txt${NC}"
fi

# 7. T√¨m v√† c·∫≠p nh·∫≠t c√°c file kh√°c c√≥ ch·ª©a IP c≈©
echo -e "${BLUE}7Ô∏è‚É£ T√¨m v√† c·∫≠p nh·∫≠t c√°c file kh√°c...${NC}"

# T√¨m c√°c file .sh c√≥ ch·ª©a IP c≈©
find . -name "*.sh" -type f -exec grep -l "10\.10\.68\." {} \; | while read file; do
    if [ "$file" != "./update-all-ip.sh" ]; then
        echo -e "${YELLOW}   üîç C·∫≠p nh·∫≠t: $file${NC}"
        sed -i.bak "s|10\.10\.68\.[0-9]*|$NEW_IP|g" "$file"
    fi
done

# T√¨m c√°c file .py c√≥ ch·ª©a IP c≈©
find . -name "*.py" -type f -exec grep -l "10\.10\.68\." {} \; | while read file; do
    echo -e "${YELLOW}   üîç C·∫≠p nh·∫≠t: $file${NC}"
    sed -i.bak "s|10\.10\.68\.[0-9]*|$NEW_IP|g" "$file"
done

# T√¨m c√°c file .ts c√≥ ch·ª©a IP c≈©
find . -name "*.ts" -type f -exec grep -l "10\.10\.68\." {} \; | while read file; do
    echo -e "${YELLOW}   üîç C·∫≠p nh·∫≠t: $file${NC}"
    sed -i.bak "s|10\.10\.68\.[0-9]*|$NEW_IP|g" "$file"
done

# T√¨m c√°c file .tsx c√≥ ch·ª©a IP c≈©
find . -name "*.tsx" -type f -exec grep -l "10\.10\.68\." {} \; | while read file; do
    echo -e "${YELLOW}   üîç C·∫≠p nh·∫≠t: $file${NC}"
    sed -i.bak "s|10\.10\.68\.[0-9]*|$NEW_IP|g" "$file"
done

# T√¨m c√°c file .conf c√≥ ch·ª©a IP c≈©
find . -name "*.conf" -type f -exec grep -l "10\.10\.68\." {} \; | while read file; do
    echo -e "${YELLOW}   üîç C·∫≠p nh·∫≠t: $file${NC}"
    sed -i.bak "s|10\.10\.68\.[0-9]*|$NEW_IP|g" "$file"
done

echo ""
echo -e "${GREEN}üéâ HO√ÄN TH√ÄNH C·∫¨P NH·∫¨T IP!${NC}"
echo "=================================="
echo -e "${BLUE}üìç IP m·ªõi: $NEW_IP${NC}"
echo -e "${BLUE}üíæ Backup: $BACKUP_DIR${NC}"
echo ""
echo -e "${YELLOW}üìã C√ÅC B∆Ø·ªöC TI·∫æP THEO:${NC}"
echo "1. Kh·ªüi ƒë·ªông l·∫°i h·ªá th·ªëng:"
echo "   ./start-https-final.sh"
echo ""
echo "2. Ki·ªÉm tra k·∫øt n·ªëi:"
echo "   curl -k https://$NEW_IP:8000/health"
echo ""
echo "3. Truy c·∫≠p ·ª©ng d·ª•ng:"
echo "   Frontend: https://localhost:5173"
echo "   Backend:  https://$NEW_IP:8000"
echo ""
echo -e "${GREEN}‚úÖ T·∫•t c·∫£ file ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t v·ªõi IP m·ªõi!${NC}"
